#ifndef _VLC_CODES_H_
#define _VLC_CODES_H_

#include "../portab.h"
#include "mbcoding.h"

#define VLC_ERROR	(-1)
#define ESCAPE 7167

typedef struct
{
	uint32_t code;
	int8_t len;
} VLC;

static VLC *DCT3D[2];


/******************************************************************
 * common tables between encoder/decoder                          *
 ******************************************************************/

/* constants taken from momusys/vm_common/inlcude/max_level.h */
static char max_level[4][64] = {
	{ // intra, last = 0
		27, 10,  5,  4,  3,  3,  3,  3, 
		2,  2,  1,  1,  1,  1,  1,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // intra, last = 1
		8,  3,  2,  2,  2,  2,  2,  1, 
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  1,  1,  1,  1,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // inter, last = 0
		12,  6,  4,  3,  3,  3,  3,  2, 
		2,  2,  2,  1,  1,  1,  1,  1,
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  1,  1,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // inter, last = 1	
		3,  2,  1,  1,  1,  1,  1,  1, 
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  1,  1,  1,  1,  1,  1,  1,
		1,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	}
};

static char max_run[4][256] = {
	{ // intra, last = 0
		0, 14,  9,  7,  3,  2,  1,  1,
		1,  1,  1,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // intra, last = 1
		0, 20,  6,  1,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // inter, last = 0
		0, 26, 10,  6,  2,  1,  1,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	},

	{ // inter, last = 1
		0, 40,  1,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
		0,  0,  0,  0,  0,  0,  0,  0,
	}
};


/******************************************************************
 * encoder tables                                                 *
 ******************************************************************/

/* DCT coefficients. Four tables, two for last = 0, two for last = 1.
   the sign bit must be added afterwards. */

/* first part of coeffs for last = 0. Indexed by [run][level-1] */

static VLC coeff_tab0[2][12] = {
	/*
	  run = 0 
	*/
	{
		{0x02, 2}, {0x0f, 4}, {0x15, 6}, {0x17, 7},
		{0x1f, 8}, {0x25, 9}, {0x24, 9}, {0x21, 10},
		{0x20, 10}, {0x07, 11}, {0x06, 11}, {0x20, 11}
	},
	/*
	  run = 1 
	*/
	{
		{0x06, 3}, {0x14, 6}, {0x1e, 8}, {0x0f, 10},
		{0x21, 11}, {0x50, 12}, {0x00, 0}, {0x00, 0},
		{0x00, 0}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	}
};

/* rest of coeffs for last = 0. indexing by [run-2][level-1] */

static VLC coeff_tab1[25][4] = {
	/*
	  run = 2 
	*/
	{
		{0x0e, 4}, {0x1d, 8}, {0x0e, 10}, {0x51, 12}
	},
	/*
	  run = 3 
	*/
	{
		{0x0d, 5}, {0x23, 9}, {0x0d, 10}, {0x00, 0}
	},
	/*
	  run = 4-26 
	*/
	{
		{0x0c, 5}, {0x22, 9}, {0x52, 12}, {0x00, 0}
	},
	{
		{0x0b, 5}, {0x0c, 10}, {0x53, 12}, {0x00, 0}
	},
	{
		{0x13, 6}, {0x0b, 10}, {0x54, 12}, {0x00, 0}
	},
	{
		{0x12, 6}, {0x0a, 10}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x11, 6}, {0x09, 10}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x10, 6}, {0x08, 10}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x16, 7}, {0x55, 12}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x15, 7}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x14, 7}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1c, 8}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1b, 8}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x21, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x20, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1f, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1e, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1d, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1c, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1b, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x1a, 9}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x22, 11}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x23, 11}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x56, 12}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	},
	{
		{0x57, 12}, {0x00, 0}, {0x00, 0}, {0x00, 0}
	}
};

/* first coeffs of last = 1. indexing by [run][level-1] */

static VLC coeff_tab2[2][3] = {
	/*
	  run = 0 
	*/
	{
		{0x07, 4}, {0x19, 9}, {0x05, 11}
	},
	/*
	  run = 1 
	*/
	{
		{0x0f, 6}, {0x04, 11}, {0x00, 0}
	}
};

/* rest of coeffs for last = 1. indexing by [run-2] */

static VLC coeff_tab3[40][1] = {
	{{0x0e, 6}},  {{0x0d, 6}},  {{0x0c, 6}},
	{{0x13, 7}},  {{0x12, 7}},  {{0x11, 7}},  {{0x10, 7}},
	{{0x1a, 8}},  {{0x19, 8}},  {{0x18, 8}},  {{0x17, 8}},
	{{0x16, 8}},  {{0x15, 8}},  {{0x14, 8}},  {{0x13, 8}},
	{{0x18, 9}},  {{0x17, 9}},  {{0x16, 9}},  {{0x15, 9}},
	{{0x14, 9}},  {{0x13, 9}},  {{0x12, 9}},  {{0x11, 9}},
	{{0x07, 10}}, {{0x06, 10}}, {{0x05, 10}}, {{0x04, 10}},
	{{0x24, 11}}, {{0x25, 11}}, {{0x26, 11}}, {{0x27, 11}},
	{{0x58, 12}}, {{0x59, 12}}, {{0x5a, 12}}, {{0x5b, 12}},
	{{0x5c, 12}}, {{0x5d, 12}}, {{0x5e, 12}}, {{0x5f, 12}},
	{{0x00, 0}}
};

/* New tables for Intra luminance coefficients. Same codewords,
   different meaning */

/* Coeffs for last = 0, run = 0. Indexed by [level-1] */

static VLC coeff_tab4[27] = {
	/*
	  run = 0 
	*/
	{0x02, 2}, {0x06, 3}, {0x0f, 4}, {0x0d, 5},
	{0x0c, 5}, {0x15, 6}, {0x13, 6}, {0x12, 6},
	{0x17, 7}, {0x1f, 8}, {0x1e, 8}, {0x1d, 8},
	{0x25, 9}, {0x24, 9}, {0x23, 9}, {0x21, 9},
	{0x21, 10}, {0x20, 10}, {0x0f, 10}, {0x0e, 10},
	{0x07, 11}, {0x06, 11}, {0x20, 11}, {0x21, 11},
	{0x50, 12}, {0x51, 12}, {0x52, 12}
};

/* Coeffs for last = 0, run = 1. Indexed by [level-1] */

static VLC coeff_tab5[10] = {
	{0x0e, 4}, {0x14, 6}, {0x16, 7}, {0x1c, 8},
	{0x20, 9}, {0x1f, 9}, {0x0d, 10}, {0x22, 11},
	{0x53, 12}, {0x55, 12}
};

/* Coeffs for last = 0, run = 2 -> 9. Indexed by [run-2][level-1] */

static VLC coeff_tab6[8][5] = {
	/*
	  run = 2 
	*/
	{
		{0x0b, 5}, {0x15, 7}, {0x1e, 9}, {0x0c, 10},
		{0x56, 12}
	},
	/*
	  run = 3 
	*/
	{
		{0x11, 6}, {0x1b, 8}, {0x1d, 9}, {0x0b, 10},
		{0x00, 0}
	},
	/*
	  run = 4 
	*/
	{
		{0x10, 6}, {0x22, 9}, {0x0a, 10}, {0x00, 0},
		{0x00, 0}
	},
	/*
	  run = 5 
	*/
	{
		{0x0d, 6}, {0x1c, 9}, {0x08, 10}, {0x00, 0},
		{0x00, 0}
	},
	/*
	  run = 6 
	*/
	{
		{0x12, 7}, {0x1b, 9}, {0x54, 12}, {0x00, 0},
		{0x00, 0}
	},
	/*
	  run = 7 
	*/
	{
		{0x14, 7}, {0x1a, 9}, {0x57, 12}, {0x00, 0},
		{0x00, 0}
	},
	/*
	  run = 8 
	*/
	{
		{0x19, 8}, {0x09, 10}, {0x00, 0}, {0x00, 0},
		{0x00, 0}
	},
	/*
	  run = 9 
	*/
	{
		{0x18, 8}, {0x23, 11}, {0x00, 0}, {0x00, 0},
		{0x00, 0}
	}
};

/* Coeffs for last = 0, run = 10 -> 14. Indexed by [run-10] */

static VLC coeff_tab7[5][1] = {
	{{0x17, 8}}, {{0x19, 9}}, {{0x18, 9}}, {{0x07, 10}},
	{{0x58, 12}}
};

/* Coeffs for last = 1, run = 0. Indexed by [level-1] */

static VLC coeff_tab8[8] = {
	{0x07, 4}, {0x0c, 6}, {0x16, 8}, {0x17, 9},
	{0x06, 10}, {0x05, 11}, {0x04, 11}, {0x59, 12}
};

/* Coeffs for last = 1, run = 1 -> 6. Indexed by [run-1][level-1] */

static VLC coeff_tab9[6][3] = {
	/*
	  run = 1 
	*/
	{
		{0x0f, 6}, {0x16, 9}, {0x05, 10}
	},
	/*
	  run = 2 
	*/
	{
		{0x0e, 6}, {0x04, 10}, {0x00, 0}
	},
	/*
	  run = 3 
	*/
	{
		{0x11, 7}, {0x24, 11}, {0x00, 0}
	},
	/*
	  run = 4 
	*/
	{
		{0x10, 7}, {0x25, 11}, {0x00, 0}
	},
	/*
	  run = 5 
	*/
	{
		{0x13, 7}, {0x5a, 12}, {0x00, 0}
	},
	/*
	  run = 6 
	*/
	{
		{0x15, 8}, {0x5b, 12}, {0x00, 0}
	}
};

/* Coeffs for last = 1, run = 7 -> 20. Indexed by [run-7] */

static VLC coeff_tab10[14][1] = {
	{{0x14, 8}},  {{0x13, 8}}, {{0x1a, 8}}, {{0x15, 9}},
	{{0x14, 9}},  {{0x13, 9}}, {{0x12, 9}}, {{0x11, 9}},
	{{0x26, 11}}, {{0x27, 11}}, {{0x5c, 12}}, {{0x5d, 12}},
	{{0x5e, 12}}, {{0x5f, 12}}
};


static VLC *coeff_intra_last0[15] = {
	coeff_tab4,
	coeff_tab5,
	coeff_tab6[0],
	coeff_tab6[1],
	coeff_tab6[2],
	coeff_tab6[3],
	coeff_tab6[4],
	coeff_tab6[5],
	coeff_tab6[6],
	coeff_tab6[7],
	coeff_tab7[0],
	coeff_tab7[1],
	coeff_tab7[2],
	coeff_tab7[3],
	coeff_tab7[4]
};

static VLC *coeff_intra_last1[21] = {
	coeff_tab8,
	coeff_tab9[0],
	coeff_tab9[1],
	coeff_tab9[2],
	coeff_tab9[3],
	coeff_tab9[4],
	coeff_tab9[5],
	coeff_tab10[0],
	coeff_tab10[1],
	coeff_tab10[2],
	coeff_tab10[3],
	coeff_tab10[4],
	coeff_tab10[5],
	coeff_tab10[6],
	coeff_tab10[7],
	coeff_tab10[8],
	coeff_tab10[9],
	coeff_tab10[10],
	coeff_tab10[11],
	coeff_tab10[12],
	coeff_tab10[13],
};

static VLC *coeff_inter_last0[27] = {
	coeff_tab0[0],
	coeff_tab0[1],
	coeff_tab1[0],
	coeff_tab1[1],
	coeff_tab1[2],
	coeff_tab1[3],
	coeff_tab1[4],
	coeff_tab1[5],
	coeff_tab1[6],
	coeff_tab1[7],
	coeff_tab1[8],
	coeff_tab1[9],
	coeff_tab1[10],
	coeff_tab1[11],
	coeff_tab1[12],
	coeff_tab1[13],
	coeff_tab1[14],
	coeff_tab1[15],
	coeff_tab1[16],
	coeff_tab1[17],
	coeff_tab1[18],
	coeff_tab1[19],
	coeff_tab1[20],
	coeff_tab1[21],
	coeff_tab1[22],
	coeff_tab1[23],
	coeff_tab1[24],
};

static VLC *coeff_inter_last1[42] = {
	coeff_tab2[0],
	coeff_tab2[1],
	coeff_tab3[0],
	coeff_tab3[1],
	coeff_tab3[2],
	coeff_tab3[3],
	coeff_tab3[4],
	coeff_tab3[5],
	coeff_tab3[6],
	coeff_tab3[7],
	coeff_tab3[8],
	coeff_tab3[9],
	coeff_tab3[10],
	coeff_tab3[11],
	coeff_tab3[12],
	coeff_tab3[13],
	coeff_tab3[14],
	coeff_tab3[15],
	coeff_tab3[16],
	coeff_tab3[17],
	coeff_tab3[18],
	coeff_tab3[19],
	coeff_tab3[20],
	coeff_tab3[21],
	coeff_tab3[22],
	coeff_tab3[23],
	coeff_tab3[24],
	coeff_tab3[25],
	coeff_tab3[26],
	coeff_tab3[27],
	coeff_tab3[28],
	coeff_tab3[29],
	coeff_tab3[30],
	coeff_tab3[31],
	coeff_tab3[32],
	coeff_tab3[33],
	coeff_tab3[34],
	coeff_tab3[35],
	coeff_tab3[36],
	coeff_tab3[37],
	coeff_tab3[38],
	coeff_tab3[39],
};

static VLC **coeff_vlc[4] = {
	coeff_intra_last0,
	coeff_intra_last1,
	coeff_inter_last0,
	coeff_inter_last1,
};

/* MCBPC Indexing by cbpc in first two bits, mode in last two.
 CBPC as in table 4/H.263, MB type (mode): 3 = 01, 4 = 10.
 Example: cbpc = 01 and mode = 4 gives index = 0110 = 6. */

static VLC mcbpc_intra_tab[15] = {
    {0x01, 9}, {0x01, 1}, {0x01, 4}, {0x00, 0},
    {0x00, 0}, {0x01, 3}, {0x01, 6}, {0x00, 0},
    {0x00, 0}, {0x02, 3}, {0x02, 6}, {0x00, 0},
    {0x00, 0}, {0x03, 3}, {0x03, 6}
};

/* MCBPC inter.
   Addressing: 5 bit ccmmm (cc = CBPC, mmm = mode (1-4 binary)) */

static VLC mcbpc_inter_tab[29] = {
    {1, 1}, {3, 3}, {2, 3}, {3, 5}, {4, 6}, {1, 9}, {0, 0}, {0, 0},
    {3, 4}, {7, 7}, {5, 7}, {4, 8}, {4, 9}, {0, 0}, {0, 0}, {0, 0},
    {2, 4}, {6, 7}, {4, 7}, {3, 8}, {3, 9}, {0, 0}, {0, 0}, {0, 0},
    {5, 6}, {5, 9}, {5, 8}, {3, 7}, {2, 9}
};

static const VLC cbpy_tab[16] = {
	{3,4}, {5,5}, {4,5}, {9,4}, {3,5}, {7,4}, {2,6}, {11,4},
	{2,5}, {3,6}, {5,4}, {10,4}, {4,4}, {8,4}, {6,4}, {3,2}
};

static const VLC dcy_tab[511] = {
	{0x100, 15}, {0x101, 15}, {0x102, 15}, {0x103, 15},
	{0x104, 15}, {0x105, 15}, {0x106, 15}, {0x107, 15},
	{0x108, 15}, {0x109, 15}, {0x10a, 15}, {0x10b, 15},
	{0x10c, 15}, {0x10d, 15}, {0x10e, 15}, {0x10f, 15},
	{0x110, 15}, {0x111, 15}, {0x112, 15}, {0x113, 15},
	{0x114, 15}, {0x115, 15}, {0x116, 15}, {0x117, 15},
	{0x118, 15}, {0x119, 15}, {0x11a, 15}, {0x11b, 15},
	{0x11c, 15}, {0x11d, 15}, {0x11e, 15}, {0x11f, 15},
	{0x120, 15}, {0x121, 15}, {0x122, 15}, {0x123, 15},
	{0x124, 15}, {0x125, 15}, {0x126, 15}, {0x127, 15},
	{0x128, 15}, {0x129, 15}, {0x12a, 15}, {0x12b, 15},
	{0x12c, 15}, {0x12d, 15}, {0x12e, 15}, {0x12f, 15},
	{0x130, 15}, {0x131, 15}, {0x132, 15}, {0x133, 15},
	{0x134, 15}, {0x135, 15}, {0x136, 15}, {0x137, 15},
	{0x138, 15}, {0x139, 15}, {0x13a, 15}, {0x13b, 15},
	{0x13c, 15}, {0x13d, 15}, {0x13e, 15}, {0x13f, 15},
	{0x140, 15}, {0x141, 15}, {0x142, 15}, {0x143, 15},
	{0x144, 15}, {0x145, 15}, {0x146, 15}, {0x147, 15},
	{0x148, 15}, {0x149, 15}, {0x14a, 15}, {0x14b, 15},
	{0x14c, 15}, {0x14d, 15}, {0x14e, 15}, {0x14f, 15},
	{0x150, 15}, {0x151, 15}, {0x152, 15}, {0x153, 15},
	{0x154, 15}, {0x155, 15}, {0x156, 15}, {0x157, 15},
	{0x158, 15}, {0x159, 15}, {0x15a, 15}, {0x15b, 15},
	{0x15c, 15}, {0x15d, 15}, {0x15e, 15}, {0x15f, 15},
	{0x160, 15}, {0x161, 15}, {0x162, 15}, {0x163, 15},
	{0x164, 15}, {0x165, 15}, {0x166, 15}, {0x167, 15},
	{0x168, 15}, {0x169, 15}, {0x16a, 15}, {0x16b, 15},
	{0x16c, 15}, {0x16d, 15}, {0x16e, 15}, {0x16f, 15},
	{0x170, 15}, {0x171, 15}, {0x172, 15}, {0x173, 15},
	{0x174, 15}, {0x175, 15}, {0x176, 15}, {0x177, 15},
	{0x178, 15}, {0x179, 15}, {0x17a, 15}, {0x17b, 15},
	{0x17c, 15}, {0x17d, 15}, {0x17e, 15}, {0x17f, 15},
	{0x80, 13}, {0x81, 13}, {0x82, 13}, {0x83, 13},
	{0x84, 13}, {0x85, 13}, {0x86, 13}, {0x87, 13},
	{0x88, 13}, {0x89, 13}, {0x8a, 13}, {0x8b, 13},
	{0x8c, 13}, {0x8d, 13}, {0x8e, 13}, {0x8f, 13},
	{0x90, 13}, {0x91, 13}, {0x92, 13}, {0x93, 13},
	{0x94, 13}, {0x95, 13}, {0x96, 13}, {0x97, 13},
	{0x98, 13}, {0x99, 13}, {0x9a, 13}, {0x9b, 13},
	{0x9c, 13}, {0x9d, 13}, {0x9e, 13}, {0x9f, 13},
	{0xa0, 13}, {0xa1, 13}, {0xa2, 13}, {0xa3, 13},
	{0xa4, 13}, {0xa5, 13}, {0xa6, 13}, {0xa7, 13},
	{0xa8, 13}, {0xa9, 13}, {0xaa, 13}, {0xab, 13},
	{0xac, 13}, {0xad, 13}, {0xae, 13}, {0xaf, 13},
	{0xb0, 13}, {0xb1, 13}, {0xb2, 13}, {0xb3, 13},
	{0xb4, 13}, {0xb5, 13}, {0xb6, 13}, {0xb7, 13},
	{0xb8, 13}, {0xb9, 13}, {0xba, 13}, {0xbb, 13},
	{0xbc, 13}, {0xbd, 13}, {0xbe, 13}, {0xbf, 13},
	{0x40, 11}, {0x41, 11}, {0x42, 11}, {0x43, 11},
	{0x44, 11}, {0x45, 11}, {0x46, 11}, {0x47, 11},
	{0x48, 11}, {0x49, 11}, {0x4a, 11}, {0x4b, 11},
	{0x4c, 11}, {0x4d, 11}, {0x4e, 11}, {0x4f, 11},
	{0x50, 11}, {0x51, 11}, {0x52, 11}, {0x53, 11},
	{0x54, 11}, {0x55, 11}, {0x56, 11}, {0x57, 11},
	{0x58, 11}, {0x59, 11}, {0x5a, 11}, {0x5b, 11},
	{0x5c, 11}, {0x5d, 11}, {0x5e, 11}, {0x5f, 11},
	{0x20, 9}, {0x21, 9}, {0x22, 9}, {0x23, 9},
	{0x24, 9}, {0x25, 9}, {0x26, 9}, {0x27, 9},
	{0x28, 9}, {0x29, 9}, {0x2a, 9}, {0x2b, 9},
	{0x2c, 9}, {0x2d, 9}, {0x2e, 9}, {0x2f, 9},
	{0x10, 7}, {0x11, 7}, {0x12, 7}, {0x13, 7},
	{0x14, 7}, {0x15, 7}, {0x16, 7}, {0x17, 7},
	{0x10, 6}, {0x11, 6}, {0x12, 6}, {0x13, 6},
	{0x08, 4}, {0x09, 4}, {0x06, 3}, {0x03, 3},
	{0x07, 3}, {0x0a, 4}, {0x0b, 4}, {0x14, 6},
	{0x15, 6}, {0x16, 6}, {0x17, 6}, {0x18, 7},
	{0x19, 7}, {0x1a, 7}, {0x1b, 7}, {0x1c, 7},
	{0x1d, 7}, {0x1e, 7}, {0x1f, 7}, {0x30, 9},
	{0x31, 9}, {0x32, 9}, {0x33, 9}, {0x34, 9},
	{0x35, 9}, {0x36, 9}, {0x37, 9}, {0x38, 9},
	{0x39, 9}, {0x3a, 9}, {0x3b, 9}, {0x3c, 9},
	{0x3d, 9}, {0x3e, 9}, {0x3f, 9}, {0x60, 11},
	{0x61, 11}, {0x62, 11}, {0x63, 11}, {0x64, 11},
	{0x65, 11}, {0x66, 11}, {0x67, 11}, {0x68, 11},
	{0x69, 11}, {0x6a, 11}, {0x6b, 11}, {0x6c, 11},
	{0x6d, 11}, {0x6e, 11}, {0x6f, 11}, {0x70, 11},
	{0x71, 11}, {0x72, 11}, {0x73, 11}, {0x74, 11},
	{0x75, 11}, {0x76, 11}, {0x77, 11}, {0x78, 11},
	{0x79, 11}, {0x7a, 11}, {0x7b, 11}, {0x7c, 11},
	{0x7d, 11}, {0x7e, 11}, {0x7f, 11}, {0xc0, 13},
	{0xc1, 13}, {0xc2, 13}, {0xc3, 13}, {0xc4, 13},
	{0xc5, 13}, {0xc6, 13}, {0xc7, 13}, {0xc8, 13},
	{0xc9, 13}, {0xca, 13}, {0xcb, 13}, {0xcc, 13},
	{0xcd, 13}, {0xce, 13}, {0xcf, 13}, {0xd0, 13},
	{0xd1, 13}, {0xd2, 13}, {0xd3, 13}, {0xd4, 13},
	{0xd5, 13}, {0xd6, 13}, {0xd7, 13}, {0xd8, 13},
	{0xd9, 13}, {0xda, 13}, {0xdb, 13}, {0xdc, 13},
	{0xdd, 13}, {0xde, 13}, {0xdf, 13}, {0xe0, 13},
	{0xe1, 13}, {0xe2, 13}, {0xe3, 13}, {0xe4, 13},
	{0xe5, 13}, {0xe6, 13}, {0xe7, 13}, {0xe8, 13},
	{0xe9, 13}, {0xea, 13}, {0xeb, 13}, {0xec, 13},
	{0xed, 13}, {0xee, 13}, {0xef, 13}, {0xf0, 13},
	{0xf1, 13}, {0xf2, 13}, {0xf3, 13}, {0xf4, 13},
	{0xf5, 13}, {0xf6, 13}, {0xf7, 13}, {0xf8, 13},
	{0xf9, 13}, {0xfa, 13}, {0xfb, 13}, {0xfc, 13},
	{0xfd, 13}, {0xfe, 13}, {0xff, 13}, {0x180, 15},
	{0x181, 15}, {0x182, 15}, {0x183, 15}, {0x184, 15},
	{0x185, 15}, {0x186, 15}, {0x187, 15}, {0x188, 15},
	{0x189, 15}, {0x18a, 15}, {0x18b, 15}, {0x18c, 15},
	{0x18d, 15}, {0x18e, 15}, {0x18f, 15}, {0x190, 15},
	{0x191, 15}, {0x192, 15}, {0x193, 15}, {0x194, 15},
	{0x195, 15}, {0x196, 15}, {0x197, 15}, {0x198, 15},
	{0x199, 15}, {0x19a, 15}, {0x19b, 15}, {0x19c, 15},
	{0x19d, 15}, {0x19e, 15}, {0x19f, 15}, {0x1a0, 15},
	{0x1a1, 15}, {0x1a2, 15}, {0x1a3, 15}, {0x1a4, 15},
	{0x1a5, 15}, {0x1a6, 15}, {0x1a7, 15}, {0x1a8, 15},
	{0x1a9, 15}, {0x1aa, 15}, {0x1ab, 15}, {0x1ac, 15},
	{0x1ad, 15}, {0x1ae, 15}, {0x1af, 15}, {0x1b0, 15},
	{0x1b1, 15}, {0x1b2, 15}, {0x1b3, 15}, {0x1b4, 15},
	{0x1b5, 15}, {0x1b6, 15}, {0x1b7, 15}, {0x1b8, 15},
	{0x1b9, 15}, {0x1ba, 15}, {0x1bb, 15}, {0x1bc, 15},
	{0x1bd, 15}, {0x1be, 15}, {0x1bf, 15}, {0x1c0, 15},
	{0x1c1, 15}, {0x1c2, 15}, {0x1c3, 15}, {0x1c4, 15},
	{0x1c5, 15}, {0x1c6, 15}, {0x1c7, 15}, {0x1c8, 15},
	{0x1c9, 15}, {0x1ca, 15}, {0x1cb, 15}, {0x1cc, 15},
	{0x1cd, 15}, {0x1ce, 15}, {0x1cf, 15}, {0x1d0, 15},
	{0x1d1, 15}, {0x1d2, 15}, {0x1d3, 15}, {0x1d4, 15},
	{0x1d5, 15}, {0x1d6, 15}, {0x1d7, 15}, {0x1d8, 15},
	{0x1d9, 15}, {0x1da, 15}, {0x1db, 15}, {0x1dc, 15},
	{0x1dd, 15}, {0x1de, 15}, {0x1df, 15}, {0x1e0, 15},
	{0x1e1, 15}, {0x1e2, 15}, {0x1e3, 15}, {0x1e4, 15},
	{0x1e5, 15}, {0x1e6, 15}, {0x1e7, 15}, {0x1e8, 15},
	{0x1e9, 15}, {0x1ea, 15}, {0x1eb, 15}, {0x1ec, 15},
	{0x1ed, 15}, {0x1ee, 15}, {0x1ef, 15}, {0x1f0, 15},
	{0x1f1, 15}, {0x1f2, 15}, {0x1f3, 15}, {0x1f4, 15},
	{0x1f5, 15}, {0x1f6, 15}, {0x1f7, 15}, {0x1f8, 15},
	{0x1f9, 15}, {0x1fa, 15}, {0x1fb, 15}, {0x1fc, 15},
	{0x1fd, 15}, {0x1fe, 15}, {0x1ff, 15},
};

static const VLC dcc_tab[511] = {
	{0x100, 16}, {0x101, 16}, {0x102, 16}, {0x103, 16},
	{0x104, 16}, {0x105, 16}, {0x106, 16}, {0x107, 16},
	{0x108, 16}, {0x109, 16}, {0x10a, 16}, {0x10b, 16},
	{0x10c, 16}, {0x10d, 16}, {0x10e, 16}, {0x10f, 16},
	{0x110, 16}, {0x111, 16}, {0x112, 16}, {0x113, 16},
	{0x114, 16}, {0x115, 16}, {0x116, 16}, {0x117, 16},
	{0x118, 16}, {0x119, 16}, {0x11a, 16}, {0x11b, 16},
	{0x11c, 16}, {0x11d, 16}, {0x11e, 16}, {0x11f, 16},
	{0x120, 16}, {0x121, 16}, {0x122, 16}, {0x123, 16},
	{0x124, 16}, {0x125, 16}, {0x126, 16}, {0x127, 16},
	{0x128, 16}, {0x129, 16}, {0x12a, 16}, {0x12b, 16},
	{0x12c, 16}, {0x12d, 16}, {0x12e, 16}, {0x12f, 16},
	{0x130, 16}, {0x131, 16}, {0x132, 16}, {0x133, 16},
	{0x134, 16}, {0x135, 16}, {0x136, 16}, {0x137, 16},
	{0x138, 16}, {0x139, 16}, {0x13a, 16}, {0x13b, 16},
	{0x13c, 16}, {0x13d, 16}, {0x13e, 16}, {0x13f, 16},
	{0x140, 16}, {0x141, 16}, {0x142, 16}, {0x143, 16},
	{0x144, 16}, {0x145, 16}, {0x146, 16}, {0x147, 16},
	{0x148, 16}, {0x149, 16}, {0x14a, 16}, {0x14b, 16},
	{0x14c, 16}, {0x14d, 16}, {0x14e, 16}, {0x14f, 16},
	{0x150, 16}, {0x151, 16}, {0x152, 16}, {0x153, 16},
	{0x154, 16}, {0x155, 16}, {0x156, 16}, {0x157, 16},
	{0x158, 16}, {0x159, 16}, {0x15a, 16}, {0x15b, 16},
	{0x15c, 16}, {0x15d, 16}, {0x15e, 16}, {0x15f, 16},
	{0x160, 16}, {0x161, 16}, {0x162, 16}, {0x163, 16},
	{0x164, 16}, {0x165, 16}, {0x166, 16}, {0x167, 16},
	{0x168, 16}, {0x169, 16}, {0x16a, 16}, {0x16b, 16},
	{0x16c, 16}, {0x16d, 16}, {0x16e, 16}, {0x16f, 16},
	{0x170, 16}, {0x171, 16}, {0x172, 16}, {0x173, 16},
	{0x174, 16}, {0x175, 16}, {0x176, 16}, {0x177, 16},
	{0x178, 16}, {0x179, 16}, {0x17a, 16}, {0x17b, 16},
	{0x17c, 16}, {0x17d, 16}, {0x17e, 16}, {0x17f, 16},
	{0x80, 14}, {0x81, 14}, {0x82, 14}, {0x83, 14},
	{0x84, 14}, {0x85, 14}, {0x86, 14}, {0x87, 14},
	{0x88, 14}, {0x89, 14}, {0x8a, 14}, {0x8b, 14},
	{0x8c, 14}, {0x8d, 14}, {0x8e, 14}, {0x8f, 14},
	{0x90, 14}, {0x91, 14}, {0x92, 14}, {0x93, 14},
	{0x94, 14}, {0x95, 14}, {0x96, 14}, {0x97, 14},
	{0x98, 14}, {0x99, 14}, {0x9a, 14}, {0x9b, 14},
	{0x9c, 14}, {0x9d, 14}, {0x9e, 14}, {0x9f, 14},
	{0xa0, 14}, {0xa1, 14}, {0xa2, 14}, {0xa3, 14},
	{0xa4, 14}, {0xa5, 14}, {0xa6, 14}, {0xa7, 14},
	{0xa8, 14}, {0xa9, 14}, {0xaa, 14}, {0xab, 14},
	{0xac, 14}, {0xad, 14}, {0xae, 14}, {0xaf, 14},
	{0xb0, 14}, {0xb1, 14}, {0xb2, 14}, {0xb3, 14},
	{0xb4, 14}, {0xb5, 14}, {0xb6, 14}, {0xb7, 14},
	{0xb8, 14}, {0xb9, 14}, {0xba, 14}, {0xbb, 14},
	{0xbc, 14}, {0xbd, 14}, {0xbe, 14}, {0xbf, 14},
	{0x40, 12}, {0x41, 12}, {0x42, 12}, {0x43, 12},
	{0x44, 12}, {0x45, 12}, {0x46, 12}, {0x47, 12},
	{0x48, 12}, {0x49, 12}, {0x4a, 12}, {0x4b, 12},
	{0x4c, 12}, {0x4d, 12}, {0x4e, 12}, {0x4f, 12},
	{0x50, 12}, {0x51, 12}, {0x52, 12}, {0x53, 12},
	{0x54, 12}, {0x55, 12}, {0x56, 12}, {0x57, 12},
	{0x58, 12}, {0x59, 12}, {0x5a, 12}, {0x5b, 12},
	{0x5c, 12}, {0x5d, 12}, {0x5e, 12}, {0x5f, 12},
	{0x20, 10}, {0x21, 10}, {0x22, 10}, {0x23, 10},
	{0x24, 10}, {0x25, 10}, {0x26, 10}, {0x27, 10},
	{0x28, 10}, {0x29, 10}, {0x2a, 10}, {0x2b, 10},
	{0x2c, 10}, {0x2d, 10}, {0x2e, 10}, {0x2f, 10},
	{0x10, 8}, {0x11, 8}, {0x12, 8}, {0x13, 8},
	{0x14, 8}, {0x15, 8}, {0x16, 8}, {0x17, 8},
	{0x08, 6}, {0x09, 6}, {0x0a, 6}, {0x0b, 6},
	{0x04, 4}, {0x05, 4}, {0x04, 3}, {0x03, 2},
	{0x05, 3}, {0x06, 4}, {0x07, 4}, {0x0c, 6},
	{0x0d, 6}, {0x0e, 6}, {0x0f, 6}, {0x18, 8},
	{0x19, 8}, {0x1a, 8}, {0x1b, 8}, {0x1c, 8},
	{0x1d, 8}, {0x1e, 8}, {0x1f, 8}, {0x30, 10},
	{0x31, 10}, {0x32, 10}, {0x33, 10}, {0x34, 10},
	{0x35, 10}, {0x36, 10}, {0x37, 10}, {0x38, 10},
	{0x39, 10}, {0x3a, 10}, {0x3b, 10}, {0x3c, 10},
	{0x3d, 10}, {0x3e, 10}, {0x3f, 10}, {0x60, 12},
	{0x61, 12}, {0x62, 12}, {0x63, 12}, {0x64, 12},
	{0x65, 12}, {0x66, 12}, {0x67, 12}, {0x68, 12},
	{0x69, 12}, {0x6a, 12}, {0x6b, 12}, {0x6c, 12},
	{0x6d, 12}, {0x6e, 12}, {0x6f, 12}, {0x70, 12},
	{0x71, 12}, {0x72, 12}, {0x73, 12}, {0x74, 12},
	{0x75, 12}, {0x76, 12}, {0x77, 12}, {0x78, 12},
	{0x79, 12}, {0x7a, 12}, {0x7b, 12}, {0x7c, 12},
	{0x7d, 12}, {0x7e, 12}, {0x7f, 12}, {0xc0, 14},
	{0xc1, 14}, {0xc2, 14}, {0xc3, 14}, {0xc4, 14},
	{0xc5, 14}, {0xc6, 14}, {0xc7, 14}, {0xc8, 14},
	{0xc9, 14}, {0xca, 14}, {0xcb, 14}, {0xcc, 14},
	{0xcd, 14}, {0xce, 14}, {0xcf, 14}, {0xd0, 14},
	{0xd1, 14}, {0xd2, 14}, {0xd3, 14}, {0xd4, 14},
	{0xd5, 14}, {0xd6, 14}, {0xd7, 14}, {0xd8, 14},
	{0xd9, 14}, {0xda, 14}, {0xdb, 14}, {0xdc, 14},
	{0xdd, 14}, {0xde, 14}, {0xdf, 14}, {0xe0, 14},
	{0xe1, 14}, {0xe2, 14}, {0xe3, 14}, {0xe4, 14},
	{0xe5, 14}, {0xe6, 14}, {0xe7, 14}, {0xe8, 14},
	{0xe9, 14}, {0xea, 14}, {0xeb, 14}, {0xec, 14},
	{0xed, 14}, {0xee, 14}, {0xef, 14}, {0xf0, 14},
	{0xf1, 14}, {0xf2, 14}, {0xf3, 14}, {0xf4, 14},
	{0xf5, 14}, {0xf6, 14}, {0xf7, 14}, {0xf8, 14},
	{0xf9, 14}, {0xfa, 14}, {0xfb, 14}, {0xfc, 14},
	{0xfd, 14}, {0xfe, 14}, {0xff, 14}, {0x180, 16},
	{0x181, 16}, {0x182, 16}, {0x183, 16}, {0x184, 16},
	{0x185, 16}, {0x186, 16}, {0x187, 16}, {0x188, 16},
	{0x189, 16}, {0x18a, 16}, {0x18b, 16}, {0x18c, 16},
	{0x18d, 16}, {0x18e, 16}, {0x18f, 16}, {0x190, 16},
	{0x191, 16}, {0x192, 16}, {0x193, 16}, {0x194, 16},
	{0x195, 16}, {0x196, 16}, {0x197, 16}, {0x198, 16},
	{0x199, 16}, {0x19a, 16}, {0x19b, 16}, {0x19c, 16},
	{0x19d, 16}, {0x19e, 16}, {0x19f, 16}, {0x1a0, 16},
	{0x1a1, 16}, {0x1a2, 16}, {0x1a3, 16}, {0x1a4, 16},
	{0x1a5, 16}, {0x1a6, 16}, {0x1a7, 16}, {0x1a8, 16},
	{0x1a9, 16}, {0x1aa, 16}, {0x1ab, 16}, {0x1ac, 16},
	{0x1ad, 16}, {0x1ae, 16}, {0x1af, 16}, {0x1b0, 16},
	{0x1b1, 16}, {0x1b2, 16}, {0x1b3, 16}, {0x1b4, 16},
	{0x1b5, 16}, {0x1b6, 16}, {0x1b7, 16}, {0x1b8, 16},
	{0x1b9, 16}, {0x1ba, 16}, {0x1bb, 16}, {0x1bc, 16},
	{0x1bd, 16}, {0x1be, 16}, {0x1bf, 16}, {0x1c0, 16},
	{0x1c1, 16}, {0x1c2, 16}, {0x1c3, 16}, {0x1c4, 16},
	{0x1c5, 16}, {0x1c6, 16}, {0x1c7, 16}, {0x1c8, 16},
	{0x1c9, 16}, {0x1ca, 16}, {0x1cb, 16}, {0x1cc, 16},
	{0x1cd, 16}, {0x1ce, 16}, {0x1cf, 16}, {0x1d0, 16},
	{0x1d1, 16}, {0x1d2, 16}, {0x1d3, 16}, {0x1d4, 16},
	{0x1d5, 16}, {0x1d6, 16}, {0x1d7, 16}, {0x1d8, 16},
	{0x1d9, 16}, {0x1da, 16}, {0x1db, 16}, {0x1dc, 16},
	{0x1dd, 16}, {0x1de, 16}, {0x1df, 16}, {0x1e0, 16},
	{0x1e1, 16}, {0x1e2, 16}, {0x1e3, 16}, {0x1e4, 16},
	{0x1e5, 16}, {0x1e6, 16}, {0x1e7, 16}, {0x1e8, 16},
	{0x1e9, 16}, {0x1ea, 16}, {0x1eb, 16}, {0x1ec, 16},
	{0x1ed, 16}, {0x1ee, 16}, {0x1ef, 16}, {0x1f0, 16},
	{0x1f1, 16}, {0x1f2, 16}, {0x1f3, 16}, {0x1f4, 16},
	{0x1f5, 16}, {0x1f6, 16}, {0x1f7, 16}, {0x1f8, 16},
	{0x1f9, 16}, {0x1fa, 16}, {0x1fb, 16}, {0x1fc, 16},
	{0x1fd, 16}, {0x1fe, 16}, {0x1ff, 16},
};


static const VLC mb_motion_table[65] = {
	{0x05, 13}, {0x07, 13}, {0x05, 12}, {0x07, 12}, 
	{0x09, 12}, {0x0b, 12}, {0x0d, 12}, {0x0f, 12}, 
	{0x09, 11}, {0x0b, 11}, {0x0d, 11}, {0x0f, 11}, 
	{0x11, 11}, {0x13, 11}, {0x15, 11}, {0x17, 11}, 
	{0x19, 11}, {0x1b, 11}, {0x1d, 11}, {0x1f, 11}, 
	{0x21, 11}, {0x23, 11}, {0x13, 10}, {0x15, 10}, 
	{0x17, 10}, {0x07, 8}, {0x09, 8}, {0x0b, 8}, 
	{0x07, 7}, {0x03, 5}, {0x03, 4}, {0x03, 3}, 
	{0x01, 1}, {0x02, 3}, {0x02, 4}, {0x02, 5}, 
	{0x06, 7}, {0x0a, 8}, {0x08, 8}, {0x06, 8}, 
	{0x16, 10}, {0x14, 10}, {0x12, 10}, {0x22, 11}, 
	{0x20, 11}, {0x1e, 11}, {0x1c, 11}, {0x1a, 11}, 
	{0x18, 11}, {0x16, 11}, {0x14, 11}, {0x12, 11}, 
	{0x10, 11}, {0x0e, 11}, {0x0c, 11}, {0x0a, 11}, 
	{0x08, 11}, {0x0e, 12}, {0x0c, 12}, {0x0a, 12}, 
	{0x08, 12}, {0x06, 12}, {0x04, 12}, {0x06, 13}, 
	{0x04, 13}
};


/******************************************************************
 * decoder tables                                                 *
 ******************************************************************/

static const VLC mcbpc_intra_table[64] = {
	{-1,0},
	{20,6}, {36,6}, {52,6}, {4,4}, {4,4}, {4,4}, 
	{4,4}, {19,3}, {19,3}, {19,3}, {19,3}, {19,3}, 
	{19,3}, {19,3}, {19,3}, {35,3}, {35,3}, {35,3}, 
	{35,3}, {35,3}, {35,3}, {35,3}, {35,3}, {51,3}, 
	{51,3}, {51,3}, {51,3}, {51,3}, {51,3}, {51,3}, 
	{51,3}, {3, 1},
	{3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1},
	{3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1},
	{3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1},
	{3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1},
	{3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1}, {3, 1},
	{3, 1}
};


static const VLC mcbpc_inter_table[257] = {
	{VLC_ERROR,0}, 
	{255,9}, {52,9}, {36,9}, {20,9}, {49,9}, {35,8}, {35,8}, {19,8}, {19,8},
	{50,8}, {50,8}, {51,7}, {51,7}, {51,7}, {51,7}, {34,7}, {34,7}, {34,7},
	{34,7}, {18,7}, {18,7}, {18,7}, {18,7}, {33,7}, {33,7}, {33,7}, {33,7}, 
	{17,7}, {17,7}, {17,7}, {17,7}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, 
	{4,6}, {4,6}, {4,6}, {48,6}, {48,6}, {48,6}, {48,6}, {48,6}, {48,6}, 
	{48,6}, {48,6}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, 
	{3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, {3,5}, 
	{32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, 
	{32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, 
	{32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {32,4}, 
	{32,4}, {32,4}, {32,4}, {32,4}, {32,4}, {16,4}, {16,4}, {16,4}, {16,4}, 
	{16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, 
	{16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, 
	{16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, {16,4}, 
	{16,4}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, {2,3}, 
	{2,3}, {2,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, {1,3}, 
	{1,3}, {1,3}, {1,3}, {0,1}
};

static const VLC cbpy_table[64] = 
{ 
	{-1,0}, {-1,0}, {6,6},  {9,6},  {8,5},  {8,5},  {4,5},  {4,5},
	{2,5},  {2,5},  {1,5},  {1,5},  {0,4},  {0,4},  {0,4},  {0,4}, 
	{12,4}, {12,4}, {12,4}, {12,4}, {10,4}, {10,4}, {10,4}, {10,4},
	{14,4}, {14,4}, {14,4}, {14,4}, {5,4},  {5,4},  {5,4},  {5,4},
	{13,4}, {13,4}, {13,4}, {13,4}, {3,4},  {3,4},  {3,4},  {3,4}, 
	{11,4}, {11,4}, {11,4}, {11,4}, {7,4},  {7,4},  {7,4},  {7,4},
	{15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2},
	{15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2}, {15, 2},
	{15, 2}, {15, 2}
};


VLC TMNMVtab0[] = {
	{3,4}, {-3,4}, {2,3}, {2,3}, {-2,3}, {-2,3}, {1,2}, {1,2}, {1,2}, {1,2},
	{-1,2}, {-1,2}, {-1,2}, {-1,2}
};

VLC TMNMVtab1[] = {
	{12,10}, {-12,10}, {11,10}, {-11,10}, {10,9}, {10,9}, {-10,9}, {-10,9},
	{9,9}, {9,9}, {-9,9}, {-9,9}, {8,9}, {8,9}, {-8,9}, {-8,9}, {7,7}, {7,7},
	{7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {7,7}, {-7,7}, {-7,7}, {-7,7}, {-7,7},
	{-7,7}, {-7,7}, {-7,7}, {-7,7}, {6,7}, {6,7}, {6,7}, {6,7}, {6,7}, {6,7},
	{6,7}, {6,7}, {-6,7}, {-6,7}, {-6,7}, {-6,7}, {-6,7}, {-6,7}, {-6,7},
	{-6,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {5,7}, {-5,7},
	{-5,7}, {-5,7}, {-5,7}, {-5,7}, {-5,7}, {-5,7}, {-5,7}, {4,6}, {4,6}, {4,6},
	{4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6}, {4,6},
	{4,6}, {4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6},
	{-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}, {-4,6}
};

VLC TMNMVtab2[] = {
	{32,12}, {-32,12}, {31,12}, {-31,12}, {30,11}, {30,11}, {-30,11}, {-30,11},
	{29,11}, {29,11}, {-29,11}, {-29,11}, {28,11}, {28,11}, {-28,11}, {-28,11},
	{27,11}, {27,11}, {-27,11}, {-27,11}, {26,11}, {26,11}, {-26,11}, {-26,11},
	{25,11}, {25,11}, {-25,11}, {-25,11}, {24,10}, {24,10}, {24,10}, {24,10},
	{-24,10}, {-24,10}, {-24,10}, {-24,10}, {23,10}, {23,10}, {23,10}, {23,10},
	{-23,10}, {-23,10}, {-23,10}, {-23,10}, {22,10}, {22,10}, {22,10}, {22,10},
	{-22,10}, {-22,10}, {-22,10}, {-22,10}, {21,10}, {21,10}, {21,10}, {21,10},
	{-21,10}, {-21,10}, {-21,10}, {-21,10}, {20,10}, {20,10}, {20,10}, {20,10},
	{-20,10}, {-20,10}, {-20,10}, {-20,10}, {19,10}, {19,10}, {19,10}, {19,10},
	{-19,10}, {-19,10}, {-19,10}, {-19,10}, {18,10}, {18,10}, {18,10}, {18,10},
	{-18,10}, {-18,10}, {-18,10}, {-18,10}, {17,10}, {17,10}, {17,10}, {17,10},
	{-17,10}, {-17,10}, {-17,10}, {-17,10}, {16,10}, {16,10}, {16,10}, {16,10},
	{-16,10}, {-16,10}, {-16,10}, {-16,10}, {15,10}, {15,10}, {15,10}, {15,10},
	{-15,10}, {-15,10}, {-15,10}, {-15,10}, {14,10}, {14,10}, {14,10}, {14,10},
	{-14,10}, {-14,10}, {-14,10}, {-14,10}, {13,10}, {13,10}, {13,10}, {13,10},
	{-13,10}, {-13,10}, {-13,10}, {-13,10}
};


VLC DCT3Dtab0[] = {
	{4225,7}, {4209,7}, {4193,7}, {4177,7}, {193,7}, {177,7}, 
	{161,7}, {4,7}, {4161,6}, {4161,6}, {4145,6}, {4145,6}, 
	{4129,6}, {4129,6}, {4113,6}, {4113,6}, {145,6}, {145,6}, 
	{129,6}, {129,6}, {113,6}, {113,6}, {97,6}, {97,6}, 
	{18,6}, {18,6}, {3,6}, {3,6}, {81,5}, {81,5}, 
	{81,5}, {81,5}, {65,5}, {65,5}, {65,5}, {65,5}, 
	{49,5}, {49,5}, {49,5}, {49,5}, {4097,4}, {4097,4}, 
	{4097,4}, {4097,4}, {4097,4}, {4097,4}, {4097,4}, {4097,4}, 
	{1,2}, {1,2}, {1,2}, {1,2}, {1,2}, {1,2}, 
	{1,2}, {1,2}, {1,2}, {1,2}, {1,2}, {1,2}, 
	{1,2}, {1,2}, {1,2}, {1,2}, {1,2}, {1,2}, 
	{1,2}, {1,2}, {1,2}, {1,2}, {1,2}, {1,2}, 
	{1,2}, {1,2}, {1,2}, {1,2}, {1,2}, {1,2}, 
	{1,2}, {1,2}, {17,3}, {17,3}, {17,3}, {17,3}, 
	{17,3}, {17,3}, {17,3}, {17,3}, {17,3}, {17,3}, 
	{17,3}, {17,3}, {17,3}, {17,3}, {17,3}, {17,3}, 
	{33,4}, {33,4}, {33,4}, {33,4}, {33,4}, {33,4}, 
	{33,4}, {33,4}, {2,4}, {2,4},{2,4},{2,4},
	{2,4}, {2,4},{2,4},{2,4}
};


VLC DCT3Dtab1[] = {
	{9,10}, {8,10}, {4481,9}, {4481,9}, {4465,9}, {4465,9}, 
	{4449,9}, {4449,9}, {4433,9}, {4433,9}, {4417,9}, {4417,9}, 
	{4401,9}, {4401,9}, {4385,9}, {4385,9}, {4369,9}, {4369,9}, 
	{4098,9}, {4098,9}, {353,9}, {353,9}, {337,9}, {337,9}, 
	{321,9}, {321,9}, {305,9}, {305,9}, {289,9}, {289,9}, 
	{273,9}, {273,9}, {257,9}, {257,9}, {241,9}, {241,9}, 
	{66,9}, {66,9}, {50,9}, {50,9}, {7,9}, {7,9}, 
	{6,9}, {6,9}, {4353,8}, {4353,8}, {4353,8}, {4353,8}, 
	{4337,8}, {4337,8}, {4337,8}, {4337,8}, {4321,8}, {4321,8}, 
	{4321,8}, {4321,8}, {4305,8}, {4305,8}, {4305,8}, {4305,8}, 
	{4289,8}, {4289,8}, {4289,8}, {4289,8}, {4273,8}, {4273,8}, 
	{4273,8}, {4273,8}, {4257,8}, {4257,8}, {4257,8}, {4257,8}, 
	{4241,8}, {4241,8}, {4241,8}, {4241,8}, {225,8}, {225,8}, 
	{225,8}, {225,8}, {209,8}, {209,8}, {209,8}, {209,8}, 
	{34,8}, {34,8}, {34,8}, {34,8}, {19,8}, {19,8}, 
	{19,8}, {19,8}, {5,8}, {5,8}, {5,8}, {5,8}
};

VLC DCT3Dtab2[] = {
	{4114,11}, {4114,11}, {4099,11}, {4099,11}, {11,11}, {11,11}, 
	{10,11}, {10,11}, {4545,10}, {4545,10}, {4545,10}, {4545,10}, 
	{4529,10}, {4529,10}, {4529,10}, {4529,10}, {4513,10}, {4513,10}, 
	{4513,10}, {4513,10}, {4497,10}, {4497,10}, {4497,10}, {4497,10}, 
	{146,10}, {146,10}, {146,10}, {146,10}, {130,10}, {130,10}, 
	{130,10}, {130,10}, {114,10}, {114,10}, {114,10}, {114,10}, 
	{98,10}, {98,10}, {98,10}, {98,10}, {82,10}, {82,10}, 
	{82,10}, {82,10}, {51,10}, {51,10}, {51,10}, {51,10}, 
	{35,10}, {35,10}, {35,10}, {35,10}, {20,10}, {20,10}, 
	{20,10}, {20,10}, {12,11}, {12,11}, {21,11}, {21,11}, 
	{369,11}, {369,11}, {385,11}, {385,11}, {4561,11}, {4561,11}, 
	{4577,11}, {4577,11}, {4593,11}, {4593,11}, {4609,11}, {4609,11}, 
	{22,12}, {36,12}, {67,12}, {83,12}, {99,12}, {162,12}, 
	{401,12}, {417,12}, {4625,12}, {4641,12}, {4657,12}, {4673,12}, 
	{4689,12}, {4705,12}, {4721,12}, {4737,12}, {7167,7}, 
	{7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, 
	{7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, 
	{7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, 
	{7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, 
	{7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, {7167,7}, 
	{7167,7}
};


/* New tables for Intra luminance blocks */

VLC DCT3Dtab3[] = {
	{0x10401, 7}, {0x10301, 7}, {0x00601, 7}, {0x10501, 7},
	{0x00701, 7}, {0x00202, 7}, {0x00103, 7}, {0x00009, 7},
	{0x10002, 6}, {0x10002, 6}, {0x00501, 6}, {0x00501, 6}, 
	{0x10201, 6}, {0x10201, 6}, {0x10101, 6}, {0x10101, 6},
	{0x00401, 6}, {0x00401, 6}, {0x00301, 6}, {0x00301, 6},
	{0x00008, 6}, {0x00008, 6}, {0x00007, 6}, {0x00007, 6}, 
	{0x00102, 6}, {0x00102, 6}, {0x00006, 6}, {0x00006, 6},
	{0x00201, 5}, {0x00201, 5}, {0x00201, 5}, {0x00201, 5},
	{0x00005, 5}, {0x00005, 5}, {0x00005, 5}, {0x00005, 5}, 
	{0x00004, 5}, {0x00004, 5}, {0x00004, 5}, {0x00004, 5}, 
	{0x10001, 4}, {0x10001, 4}, {0x10001, 4}, {0x10001, 4},
	{0x10001, 4}, {0x10001, 4}, {0x10001, 4}, {0x10001, 4},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2}, 
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2}, 
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00001, 2}, {0x00001, 2}, {0x00001, 2}, {0x00001, 2},
	{0x00002, 3}, {0x00002, 3}, {0x00002, 3}, {0x00002, 3}, 
	{0x00002, 3}, {0x00002, 3}, {0x00002, 3}, {0x00002, 3},
	{0x00002, 3}, {0x00002, 3}, {0x00002, 3}, {0x00002, 3},
	{0x00002, 3}, {0x00002, 3}, {0x00002, 3}, {0x00002, 3}, 
	{0x00101, 4}, {0x00101, 4}, {0x00101, 4}, {0x00101, 4},
	{0x00101, 4}, {0x00101, 4}, {0x00101, 4}, {0x00101, 4},
	{0x00003, 4}, {0x00003, 4}, {0x00003, 4}, {0x00003, 4},
	{0x00003, 4}, {0x00003, 4}, {0x00003, 4}, {0x00003, 4}
};


VLC DCT3Dtab4[] = {
	{0x00012,10}, {0x00011,10}, {0x10e01, 9}, {0x10e01, 9},
	{0x10d01, 9}, {0x10d01, 9}, {0x10c01, 9}, {0x10c01, 9},
	{0x10b01, 9}, {0x10b01, 9}, {0x10a01, 9}, {0x10a01, 9}, 
	{0x10102, 9}, {0x10102, 9}, {0x10004, 9}, {0x10004, 9},
	{0x00c01, 9}, {0x00c01, 9}, {0x00b01, 9}, {0x00b01, 9},
	{0x00702, 9}, {0x00702, 9}, {0x00602, 9}, {0x00602, 9}, 
	{0x00502, 9}, {0x00502, 9}, {0x00303, 9}, {0x00303, 9},
	{0x00203, 9}, {0x00203, 9}, {0x00106, 9}, {0x00106, 9},
	{0x00105, 9}, {0x00105, 9}, {0x00010, 9}, {0x00010, 9}, 
	{0x00402, 9}, {0x00402, 9}, {0x0000f, 9}, {0x0000f, 9},
	{0x0000e, 9}, {0x0000e, 9}, {0x0000d, 9}, {0x0000d, 9},
	{0x10801, 8}, {0x10801, 8}, {0x10801, 8}, {0x10801, 8}, 
	{0x10701, 8}, {0x10701, 8}, {0x10701, 8}, {0x10701, 8},
	{0x10601, 8}, {0x10601, 8}, {0x10601, 8}, {0x10601, 8},
	{0x10003, 8}, {0x10003, 8}, {0x10003, 8}, {0x10003, 8},  
	{0x00a01, 8}, {0x00a01, 8}, {0x00a01, 8}, {0x00a01, 8},
	{0x00901, 8}, {0x00901, 8}, {0x00901, 8}, {0x00901, 8},
	{0x00801, 8}, {0x00801, 8}, {0x00801, 8}, {0x00801, 8},  
	{0x10901, 8}, {0x10901, 8}, {0x10901, 8}, {0x10901, 8},
	{0x00302, 8}, {0x00302, 8}, {0x00302, 8}, {0x00302, 8},
	{0x00104, 8}, {0x00104, 8}, {0x00104, 8}, {0x00104, 8},  
	{0x0000c, 8}, {0x0000c, 8}, {0x0000c, 8}, {0x0000c, 8},
	{0x0000b, 8}, {0x0000b, 8}, {0x0000b, 8}, {0x0000b, 8},
	{0x0000a, 8}, {0x0000a, 8}, {0x0000a, 8}, {0x0000a, 8} 
};

VLC DCT3Dtab5[] = {
	{0x10007,11}, {0x10007,11}, {0x10006,11}, {0x10006,11},
	{0x00016,11}, {0x00016,11}, {0x00015,11}, {0x00015,11},
	{0x10202,10}, {0x10202,10}, {0x10202,10}, {0x10202,10},  
	{0x10103,10}, {0x10103,10}, {0x10103,10}, {0x10103,10},
	{0x10005,10}, {0x10005,10}, {0x10005,10}, {0x10005,10},
	{0x00d01,10}, {0x00d01,10}, {0x00d01,10}, {0x00d01,10},  
	{0x00503,10}, {0x00503,10}, {0x00503,10}, {0x00503,10},
	{0x00802,10}, {0x00802,10}, {0x00802,10}, {0x00802,10},
	{0x00403,10}, {0x00403,10}, {0x00403,10}, {0x00403,10},  
	{0x00304,10}, {0x00304,10}, {0x00304,10}, {0x00304,10},
	{0x00204,10}, {0x00204,10}, {0x00204,10}, {0x00204,10},
	{0x00107,10}, {0x00107,10}, {0x00107,10}, {0x00107,10}, 
	{0x00014,10}, {0x00014,10}, {0x00014,10}, {0x00014,10},
	{0x00013,10}, {0x00013,10}, {0x00013,10}, {0x00013,10},
	{0x00017,11}, {0x00017,11}, {0x00018,11}, {0x00018,11}, 
	{0x00108,11}, {0x00108,11}, {0x00902,11}, {0x00902,11},
	{0x10302,11}, {0x10302,11}, {0x10402,11}, {0x10402,11},
	{0x10f01,11}, {0x10f01,11}, {0x11001,11}, {0x11001,11}, 
	{0x00019,12}, {0x0001a,12}, {0x0001b,12}, {0x00109,12},
	{0x00603,12}, {0x0010a,12}, {0x00205,12}, {0x00703,12},
	{0x00e01,12}, {0x10008,12}, {0x10502,12}, {0x10602,12}, 
	{0x11101,12}, {0x11201,12}, {0x11301,12}, {0x11401,12},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7},
	{0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}, {0x01bff, 7}
};

VLC ERRtab[] = {
	{VLC_ERROR, 0}, {VLC_ERROR, 0}, {VLC_ERROR, 0},
	{VLC_ERROR, 0}, {VLC_ERROR, 0}, {VLC_ERROR, 0},
	{VLC_ERROR, 0}, {VLC_ERROR, 0}, {VLC_ERROR, 0},
	{VLC_ERROR, 0}, {VLC_ERROR, 0}, {VLC_ERROR, 0},
	{VLC_ERROR, 0}, {VLC_ERROR, 0}, {VLC_ERROR, 0}
};

static const VLC dc_lum_tab[] = {
	{0, 0},
	{4, 3}, {3, 3}, {0, 3},
	{2, 2}, {2, 2}, {1, 2}, {1, 2},
};

static __inline int get_coeff(Bitstream * bs, int *run, int *last,
							  int intra, int short_video_header) 
{

	uint32_t mode;
	const VLC *tab;
	int32_t level;

	if(short_video_header) // inter-VLCs will be used for both intra and inter blocks
		intra = 0;
	
	tab = &DCT3D[intra][BitstreamShowBits(bs, 12)];
	
	if(tab->code == -1)
		goto error;

	BitstreamSkip(bs, tab->len);

	if(tab->code != ESCAPE) {
		if(!intra) 
		{
			*run = (tab->code >> 4) & 255;
			level = tab->code & 15;
			*last = (tab->code >> 12) & 1;
		}
		else 
		{
			*run = (tab->code >> 8) & 255;
			level = tab->code & 255;
			*last = (tab->code >> 16) & 1;
		}
		return BitstreamGetBit(bs) ? -level : level;
	}

	if(short_video_header)
	{
		// escape mode 4 - H.263 type, only used if short_video_header = 1 
		*last = BitstreamGetBit(bs);
		*run = BitstreamGetBits(bs, 6);
		level = BitstreamGetBits(bs, 8);

		if (level == 0 || level == 128) 
			DEBUG1("Illegal LEVEL for ESCAPE mode 4:", level);

		return (level >= 128 ? -(256 - level) : level);
	}
	
	mode = BitstreamShowBits(bs, 2);

	if(mode < 3) {
		BitstreamSkip(bs, (mode == 2) ? 2 : 1);

		tab = &DCT3D[intra][BitstreamShowBits(bs, 12)];
		if (tab->code == -1)
			goto error;

		BitstreamSkip(bs, tab->len);

		if (!intra) {		
			*run = (tab->code >> 4) & 255;
			level = tab->code & 15;
			*last = (tab->code >> 12) & 1;
		}
		else 
		{
			*run = (tab->code >> 8) & 255;
			level = tab->code & 255;
			*last = (tab->code >> 16) & 1;
		}      

		if(mode < 2) // first escape mode, level is offset
			level += max_level[*last + (!intra<<1)][*run]; // need to add back the max level
		else if(mode == 2)  // second escape mode, run is offset
			*run += max_run[*last + (!intra<<1)][level] + 1;
		
		return BitstreamGetBit(bs) ? -level : level;
	} 

	// third escape mode - fixed length codes
	BitstreamSkip(bs, 2);
	*last = BitstreamGetBits(bs, 1);
	*run = BitstreamGetBits(bs, 6);			
	BitstreamSkip(bs, 1);				// marker
	level = BitstreamGetBits(bs, 12);		
	BitstreamSkip(bs, 1);				// marker

	return (level & 0x800) ? (level | (-1 ^ 0xfff)) : level;

 error:
	*run = VLC_ERROR;
	return 0;

}

#endif /* _VLC_CODES_H */
